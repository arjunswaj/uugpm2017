SELECT
  GER.PARTY, COUNT(GER.PARTY) AS GOLD
FROM
  (SELECT
     CANDIDATE,
     PARTY,
     CONSTITUENCY,
     STATE,
     MAX(VOTES) AS WINNER_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017
   GROUP BY STATE , CONSTITUENCY) WINNER
  JOIN
  UP_STATE_ELECTION_RESULTS_2017 GER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY
                                         AND GER.STATE = WINNER.STATE)
WHERE
  GER.VOTES = WINNER.WINNER_VOTES
GROUP BY GER.PARTY
ORDER BY GOLD DESC;

SELECT
  RUNNER_UP_PARTY, COUNT(RUNNER_UP_PARTY) AS SILVER
FROM
  (SELECT
     RUNNER_UP_CANDIDATE, RUNNER_UP_PARTY
   FROM
     (SELECT
        GER.CANDIDATE AS RUNNER_UP_CANDIDATE,
        GER.PARTY AS RUNNER_UP_PARTY,
        GER.CONSTITUENCY AS RUNNER_UP_CONSTITUENCY,
        GER.STATE AS RUNNER_UP_STATE,
        GER.VOTES AS RUNNER_UP_VOTES,
        WINNER.CANDIDATE AS WINNER_CANDIDATE,
        WINNER.PARTY AS WINNER_PARTY,
        WINNER.CONSTITUENCY AS WINNER_CONSTITUENCY,
        WINNER.WINNER_VOTES AS WINNER_VOTES
      FROM
        UP_STATE_ELECTION_RESULTS_2017 GER
        JOIN (SELECT
                CANDIDATE,
                PARTY,
                CONSTITUENCY,
                STATE,
                MAX(VOTES) AS WINNER_VOTES
              FROM
                UP_STATE_ELECTION_RESULTS_2017
              GROUP BY STATE , CONSTITUENCY) AS WINNER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY)
                                                          AND (GER.STATE = WINNER.STATE)
      WHERE
        GER.VOTES < WINNER.WINNER_VOTES
      ORDER BY GER.VOTES DESC) CAND
   GROUP BY CAND.RUNNER_UP_STATE , CAND.RUNNER_UP_CONSTITUENCY) AS SILVER_MEDALISTS
GROUP BY RUNNER_UP_PARTY
ORDER BY SILVER DESC;

SELECT
  COUNT(*) AS NO_OF_CANDIDATES, PARTY
FROM
  UP_STATE_ELECTION_RESULTS_2017
GROUP BY PARTY
ORDER BY NO_OF_CANDIDATES DESC;

SELECT
  GER1.CANDIDATE AS SAFE_CANDIDATE,
  GER1.PARTY AS SAFE_CANDIDATES_PARTY,
  GER1.CONSTITUENCY AS SAFE_CANDIDATES_CONSTITUENCY,
  GER1.STATE AS SAFE_CANDIDATES_STATE,
  GER1.VOTES AS SAFE_CANDIDATES_VOTES
FROM
  UP_STATE_ELECTION_RESULTS_2017 GER1
  JOIN
  UP_STATE_ELECTION_RESULTS_2017 GER2 ON (GER1.PARTY = GER2.PARTY
                                    AND GER1.CANDIDATE = GER2.CANDIDATE)
WHERE
  GER1.CONSTITUENCY <> GER2.CONSTITUENCY
  AND GER1.PARTY NOT IN ('INDEPENDENT' , 'NONE OF THE ABOVE')
ORDER BY SAFE_CANDIDATE;

SELECT
  CANDIDATE, PARTY, CONSTITUENCY, VOTES
FROM
  UP_STATE_ELECTION_RESULTS_2017
ORDER BY VOTES DESC;

SELECT
  STATE, CONSTITUENCY, SUM(VOTES) AS TOTAL_VOTES
FROM
  UP_STATE_ELECTION_RESULTS_2017
GROUP BY STATE , CONSTITUENCY
ORDER BY TOTAL_VOTES DESC;

SELECT
  PARTY_VOTE_DETAILS.PARTY AS PARTY,
  PARTY_VOTE_DETAILS.PARTY_VOTES AS PARTY_VOTES,
  TOTAL_VOTE_DETAILS.TOTAL_VOTES AS TOTAL_VOTES,
  (PARTY_VOTE_DETAILS.PARTY_VOTES / TOTAL_VOTE_DETAILS.TOTAL_VOTES) AS VOTE_SHARE
FROM
  (SELECT
     PARTY, SUM(VOTES) AS PARTY_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017
   GROUP BY PARTY) AS PARTY_VOTE_DETAILS,
  (SELECT
     SUM(VOTES) AS TOTAL_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017) AS TOTAL_VOTE_DETAILS
ORDER BY PARTY_VOTES DESC;

SELECT
  ger.CANDIDATE,
  ger.PARTY,
  ger.CONSTITUENCY,
  ger.VOTES,
  VOTE_DETAILS.TOTAL_VOTES,
  (ger.VOTES / VOTE_DETAILS.TOTAL_VOTES) AS VOTE_SHARE
FROM
  (SELECT
     CONSTITUENCY, SUM(VOTES) AS TOTAL_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017
   GROUP BY STATE , CONSTITUENCY) AS VOTE_DETAILS
  JOIN
  UP_STATE_ELECTION_RESULTS_2017 ger ON VOTE_DETAILS.CONSTITUENCY = ger.CONSTITUENCY
ORDER BY VOTE_SHARE DESC;

SELECT
  COUNT(DEPOSIT_LOSERS.PARTY) AS NO_OF_CANDIDATES_WITH_LESS_THAN_ONE_SIXTH_VOTES,
  DEPOSIT_LOSERS.PARTY
FROM
  (SELECT
     ger.CANDIDATE,
     ger.PARTY,
     ger.CONSTITUENCY,
     ger.VOTES,
     VOTE_DETAILS.TOTAL_VOTES,
     (ger.VOTES / VOTE_DETAILS.TOTAL_VOTES) AS VOTE_SHARE
   FROM
     (SELECT
        CONSTITUENCY, STATE, SUM(VOTES) AS TOTAL_VOTES
      FROM
        UP_STATE_ELECTION_RESULTS_2017
      GROUP BY STATE , CONSTITUENCY) AS VOTE_DETAILS
     JOIN UP_STATE_ELECTION_RESULTS_2017 ger ON (VOTE_DETAILS.CONSTITUENCY = ger.CONSTITUENCY)
                                          AND (VOTE_DETAILS.STATE = ger.STATE)) DEPOSIT_LOSERS
WHERE
  VOTE_SHARE < (1 / 6)
GROUP BY DEPOSIT_LOSERS.PARTY
ORDER BY NO_OF_CANDIDATES_WITH_LESS_THAN_ONE_SIXTH_VOTES DESC;

SELECT
  WINNER_CONSTITUENCY AS CONSTITUENCY,
  WINNER_CANDIDATE,
  WINNER_PARTY,
  WINNER_VOTES,
  RUNNER_UP_CANDIDATE,
  RUNNER_UP_PARTY,
  MAX(CAND.RUNNER_UP_VOTES) AS RUNNER_UP_VOTES,
  (WINNER_VOTES - RUNNER_UP_VOTES) AS DIFFERENCE_IN_VOTES
FROM
  (SELECT
     GER.CANDIDATE AS RUNNER_UP_CANDIDATE,
     GER.PARTY AS RUNNER_UP_PARTY,
     GER.CONSTITUENCY AS RUNNER_UP_CONSTITUENCY,
     GER.STATE AS RUNNER_UP_STATE,
     GER.VOTES AS RUNNER_UP_VOTES,
     WINNER.CANDIDATE AS WINNER_CANDIDATE,
     WINNER.PARTY AS WINNER_PARTY,
     WINNER.CONSTITUENCY AS WINNER_CONSTITUENCY,
     WINNER.WINNER_VOTES AS WINNER_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017 GER
     JOIN (SELECT
             CANDIDATE,
             PARTY,
             CONSTITUENCY,
             STATE,
             MAX(VOTES) AS WINNER_VOTES
           FROM
             UP_STATE_ELECTION_RESULTS_2017
           GROUP BY STATE , CONSTITUENCY) AS WINNER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY)
                                                       AND (GER.STATE = WINNER.STATE)
   WHERE
     GER.VOTES < WINNER.WINNER_VOTES
   ORDER BY GER.VOTES DESC) CAND
GROUP BY CAND.RUNNER_UP_STATE , CAND.RUNNER_UP_CONSTITUENCY
ORDER BY DIFFERENCE_IN_VOTES DESC;

SELECT
  CONSTITUENCY, COUNT(CANDIDATE) AS NO_OF_CANDIDATES
FROM
  UP_STATE_ELECTION_RESULTS_2017
GROUP BY STATE , CONSTITUENCY
ORDER BY NO_OF_CANDIDATES DESC;

set session sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';

SELECT
  WINNER_CONSTITUENCY AS CONSTITUENCY,
  WINNER_CANDIDATE,
  WINNER_PARTY,
  WINNER_VOTES,
  RUNNER_UP_CANDIDATE,
  RUNNER_UP_PARTY,
  MAX(CAND.RUNNER_UP_VOTES) AS RUNNER_UP_VOTES,
  (WINNER_VOTES - RUNNER_UP_VOTES) AS DIFFERENCE_IN_VOTES
FROM
  (SELECT
     GER.CANDIDATE AS RUNNER_UP_CANDIDATE,
     GER.PARTY AS RUNNER_UP_PARTY,
     GER.CONSTITUENCY AS RUNNER_UP_CONSTITUENCY,
     GER.STATE AS RUNNER_UP_STATE,
     GER.VOTES AS RUNNER_UP_VOTES,
     WINNER.CANDIDATE AS WINNER_CANDIDATE,
     WINNER.PARTY AS WINNER_PARTY,
     WINNER.CONSTITUENCY AS WINNER_CONSTITUENCY,
     WINNER.WINNER_VOTES AS WINNER_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017 GER
     JOIN (SELECT
             CANDIDATE,
             PARTY,
             CONSTITUENCY,
             STATE,
             MAX(VOTES) AS WINNER_VOTES
           FROM
             UP_STATE_ELECTION_RESULTS_2017
           GROUP BY STATE , CONSTITUENCY) AS WINNER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY)
                                                       AND (GER.STATE = WINNER.STATE)
   WHERE
     GER.VOTES < WINNER.WINNER_VOTES
   ORDER BY GER.VOTES DESC) CAND
GROUP BY CAND.RUNNER_UP_STATE , CAND.RUNNER_UP_CONSTITUENCY
ORDER BY DIFFERENCE_IN_VOTES ASC;


SELECT
  PARTY,
  TOTAL_COST,
  PARTY_VOTES,
  (TOTAL_COST / PARTY_VOTES) AS COST_PER_VOTE
FROM
  (SELECT
     (COUNT(GER.CANDIDATE) * 7000000) AS TOTAL_COST,
     GER.PARTY AS PARTY,
     PARTY_VOTE_DETAILS.PARTY_VOTES AS PARTY_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017 GER
     JOIN (SELECT
             PARTY, SUM(VOTES) AS PARTY_VOTES
           FROM
             UP_STATE_ELECTION_RESULTS_2017
           GROUP BY PARTY) AS PARTY_VOTE_DETAILS ON GER.PARTY = PARTY_VOTE_DETAILS.PARTY
   GROUP BY GER.PARTY) COST_ANALYSIS
ORDER BY COST_PER_VOTE DESC;

SELECT
  PARTY,
  TOTAL_COST,
  PARTY_WON_SEATS,
  PARTY_PARTICIPATED_SEATS,
  (PARTY_WON_SEATS / PARTY_PARTICIPATED_SEATS) SUCCESS_RATIO,
  (TOTAL_COST / PARTY_WON_SEATS) AS COST_PER_SEAT
FROM
  (SELECT
     (COUNT(GER.CANDIDATE) * 7000000) AS TOTAL_COST,
     GER.PARTY AS PARTY,
     COUNT(GER.CANDIDATE) AS PARTY_PARTICIPATED_SEATS,
     PARTY_SEAT_DETAILS.SEATS AS PARTY_WON_SEATS
   FROM
     UP_STATE_ELECTION_RESULTS_2017 GER
     JOIN (SELECT
             GER.PARTY, COUNT(GER.PARTY) AS SEATS
           FROM
             (SELECT
                CANDIDATE,
                PARTY,
                CONSTITUENCY,
                STATE,
                MAX(VOTES) AS WINNER_VOTES
              FROM
                UP_STATE_ELECTION_RESULTS_2017
              GROUP BY STATE , CONSTITUENCY) WINNER
             JOIN UP_STATE_ELECTION_RESULTS_2017 GER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY
                                                   AND GER.STATE = WINNER.STATE)
           WHERE
             GER.VOTES = WINNER.WINNER_VOTES
           GROUP BY GER.PARTY) AS PARTY_SEAT_DETAILS ON GER.PARTY = PARTY_SEAT_DETAILS.PARTY
   GROUP BY GER.PARTY) COST_ANALYSIS
ORDER BY COST_PER_SEAT;

SELECT
  SAFE_CANDIDATE,
  SAFE_CANDIDATES_PARTY,
  SAFE_CANDIDATES_CONSTITUENCY,
  SAFE_CANDIDATES_VOTES,
  WINNING_CANDIDATE,
  WINNING_CANDIDATES_PARTY,
  WINNING_CANDIDATES_CONSTITUENCY,
  WINNING_CANDIDATES_VOTES
FROM
  (SELECT
     GER1.CANDIDATE AS SAFE_CANDIDATE,
     GER1.PARTY AS SAFE_CANDIDATES_PARTY,
     GER1.CONSTITUENCY AS SAFE_CANDIDATES_CONSTITUENCY,
     GER1.STATE AS SAFE_CANDIDATES_STATE,
     GER1.VOTES AS SAFE_CANDIDATES_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017 GER1
     JOIN UP_STATE_ELECTION_RESULTS_2017 GER2 ON (GER1.PARTY = GER2.PARTY
                                            AND GER1.CANDIDATE = GER2.CANDIDATE)
   WHERE
     GER1.CONSTITUENCY <> GER2.CONSTITUENCY
     AND GER1.PARTY NOT IN ('INDEPENDENT' , 'NONE OF THE ABOVE')) SAFE_PLAYERS
  LEFT OUTER JOIN
  (SELECT
     CANDIDATE AS WINNING_CANDIDATE,
     PARTY AS WINNING_CANDIDATES_PARTY,
     CONSTITUENCY AS WINNING_CANDIDATES_CONSTITUENCY,
     STATE AS WINNING_CANDIDATES_STATE,
     MAX(VOTES) AS WINNING_CANDIDATES_VOTES
   FROM
     UP_STATE_ELECTION_RESULTS_2017
   GROUP BY STATE , CONSTITUENCY) AS WINNERS ON (SAFE_CANDIDATES_STATE = WINNING_CANDIDATES_STATE
                                                 AND SAFE_CANDIDATES_CONSTITUENCY = WINNING_CANDIDATES_CONSTITUENCY
                                                 AND SAFE_CANDIDATE = WINNING_CANDIDATE)
ORDER BY WINNING_CANDIDATE DESC;


SELECT
  ALL_PARTIES.PARTY
FROM
  (SELECT
     PARTY
   FROM
     UP_STATE_ELECTION_RESULTS_2017
   GROUP BY PARTY) AS ALL_PARTIES
  LEFT OUTER JOIN
  (SELECT
     GER.PARTY AS PARTY
   FROM
     (SELECT
        CANDIDATE,
        PARTY,
        CONSTITUENCY,
        STATE,
        MAX(VOTES) AS WINNER_VOTES
      FROM
        UP_STATE_ELECTION_RESULTS_2017
      GROUP BY STATE , CONSTITUENCY) WINNER
     JOIN UP_STATE_ELECTION_RESULTS_2017 GER ON (GER.CONSTITUENCY = WINNER.CONSTITUENCY
                                           AND GER.STATE = WINNER.STATE)
   WHERE
     GER.VOTES = WINNER.WINNER_VOTES
   GROUP BY GER.PARTY) AS WINNING_PARTIES ON ALL_PARTIES.PARTY = WINNING_PARTIES.PARTY
WHERE
  WINNING_PARTIES.PARTY IS NULL
ORDER BY ALL_PARTIES.PARTY;